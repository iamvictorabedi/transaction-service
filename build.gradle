plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.bring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2020.0.0")
    set('springFoxSwagger2Version', '2.9.2')
    set('mapStructVersion',  '1.4.1.Final')
    set('commonsCollections4Version', '4.4')
    set('lombokMapStructBinding', '0.1.0')
    set('archunitVersion', '0.14.1')
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBinding}"
    compileOnly 'org.projectlombok:lombok'

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign') {
        exclude group: 'io.github.openfeign', module: 'feign-hystrix'
    }
    implementation "org.springframework:spring-jms"
    implementation 'net.logstash.logback:logstash-logback-encoder:6.5'
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation("io.springfox:springfox-swagger-ui:${springFoxSwagger2Version}")
    implementation("io.springfox:springfox-swagger2:${springFoxSwagger2Version}")
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
    implementation "org.apache.commons:commons-lang3"

    testImplementation "com.tngtech.archunit:archunit-junit5:${archunitVersion}"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }

    testRuntimeOnly "com.h2database:h2"
}

test {
    useJUnitPlatform()
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Amapstruct.defaultComponentModel=spring", "-Amapstruct.unmappedTargetPolicy=IGNORE"]
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
